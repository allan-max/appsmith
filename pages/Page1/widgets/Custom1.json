{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 55,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{{\n{\n\tchatHistory:Stalin.history,\n\tbotMessage:\"\"\n}\n}}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    },
    {
      "key": "defaultModel"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicPropertyPathList": [],
  "dynamicTriggerPathList": [
    {
      "key": "enviar"
    }
  ],
  "enviar": "{{Stalin.send(msg);}}",
  "events": [
    "enviar"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "2goelogi7y",
  "leftColumn": 11,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 43,
  "mobileLeftColumn": 19,
  "mobileRightColumn": 42,
  "mobileTopRow": 13,
  "needsErrorInfo": false,
  "parentColumnSpace": 14.234375,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 57,
  "srcDoc": {
    "css": "@charset \"UTF-8\";\n:root {\n  --bg-light: #f8f9fa;\n  --text-light: #212529;\n  --accent-light: #007bff;\n  --container-bg-light: #ffffff;\n  --chat-header-bg-light: #007bff;\n  --chat-header-text-light: white;\n  --chat-footer-bg-light: #f9f9f9;\n  --chat-messages-bg-light: #f9f9f9;\n  --chat-input-bg-light: white;\n  --chat-input-border-light: #ccc;\n  --chat-bubble-bg-light: #007bff;\n  --chat-bubble-text-light: white;\n  --user-message-text-light: #007bff; /* Cor do texto da mensagem do usuário não é usada, pois o fundo é colorido */\n  --support-message-text-light: #555;\n  --bg-dark: #1a1a1a;\n  --text-dark: #e9ecef;\n  --accent-dark: #61dafb;\n  --container-bg-dark: #2c2c2c;\n  --chat-header-bg-dark: #0056b3;\n  --chat-header-text-dark: #e9ecef;\n  --chat-footer-bg-dark: #222;\n  --chat-messages-bg-dark: #272727;\n  --chat-input-bg-dark: #333;\n  --chat-input-border-dark: #555;\n  --chat-bubble-bg-dark: var(--accent-dark);\n  --chat-bubble-text-dark: var(--bg-dark);\n  --user-message-text-dark: var(--accent-dark); /* Cor do texto da mensagem do usuário não é usada, pois o fundo é colorido */\n  --support-message-text-dark: #bbb;\n  --font-primary: \"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n}\n\nbody {\n  font-family: var(--font-primary);\n  margin: 0;\n  background-color: var(--bg-light);\n  color: var(--text-light);\n  transition: background-color 0.4s ease, color 0.4s ease;\n  overflow-x: hidden;\n}\n\nbody.dark-mode {\n  background-color: var(--bg-dark);\n  color: var(--text-dark);\n}\n\n.appsmith-widget-container {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 80vh;\n  text-align: center;\n}\n\n.dark-mode-toggle-container {\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  z-index: 1002;\n}\n\n.dark-mode-toggle {\n  background-color: var(--container-bg-light);\n  color: var(--text-light);\n  border: 1px solid var(--text-light);\n  padding: 10px 15px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 0.9em;\n  font-weight: 500;\n  outline: none;\n  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, transform 0.2s ease;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.dark-mode-toggle:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\nbody.dark-mode .dark-mode-toggle {\n  background-color: var(--container-bg-dark);\n  color: var(--text-dark);\n  border: 1px solid var(--text-dark);\n}\n\nbody.dark-mode .dark-mode-toggle:hover {\n  background-color: var(--accent-dark);\n  color: var(--bg-dark);\n  border-color: var(--accent-dark);\n}\n\n.icon { /* Para o ícone do botão de tema */\n  margin-right: 8px;\n  font-size: 1.1em;\n}\n\n.content-container {\n  background-color: var(--container-bg-light);\n  color: var(--text-light);\n  padding: 40px 50px;\n  border-radius: 15px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);\n  max-width: 550px;\n  width: 90%;\n  transition: background-color 0.4s ease, color 0.4s ease, box-shadow 0.4s ease;\n}\n\nbody.dark-mode .content-container {\n  background-color: var(--container-bg-dark);\n  color: var(--text-dark);\n  box-shadow: 0 8px 25px rgba(255, 255, 255, 0.05);\n}\n\n.content-container h1 {\n  color: var(--accent-light);\n  margin-top: 0;\n  margin-bottom: 25px;\n  font-size: 2.8em;\n  font-weight: 700;\n  letter-spacing: -0.5px;\n  transition: color 0.4s ease;\n}\n\nbody.dark-mode .content-container h1 {\n  color: var(--accent-dark);\n}\n\n.content-container p {\n  font-size: 1.15em;\n  line-height: 1.7;\n  margin-bottom: 20px;\n  font-weight: 400;\n}\n\n.ai-name {\n  font-weight: 600;\n  color: var(--accent-light);\n  transition: color 0.4s ease;\n}\n\nbody.dark-mode .ai-name {\n  color: var(--accent-dark);\n}\n\n.highlight {\n  font-size: 1.25em;\n  font-weight: 500;\n  margin-top: 30px;\n  margin-bottom: 25px; /* Espaço antes do novo input */\n  color: var(--accent-light);\n  transition: color 0.4s ease;\n}\n\nbody.dark-mode .highlight {\n  color: var(--accent-dark);\n}\n\n/* Novo container para input na página principal */\n.main-page-chat-input-container {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin-top: 10px; /* Espaçamento adicional */\n  margin-bottom: 20px; /* Espaçamento abaixo */\n}\n\n#main-page-chat-input {\n  flex-grow: 1;\n  padding: 12px 18px;\n  border: 1px solid var(--chat-input-border-light);\n  border-radius: 25px; /* Bordas arredondadas */\n  font-size: 1em;\n  background-color: var(--chat-input-bg-light);\n  color: var(--text-light);\n  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;\n  margin-right: 10px;\n}\n\nbody.dark-mode #main-page-chat-input {\n  background-color: var(--chat-input-bg-dark);\n  color: var(--text-dark);\n  border-color: var(--chat-input-border-dark);\n}\n\n#main-page-chat-input::placeholder {\n  color: var(--text-light);\n  opacity: 0.7;\n}\n\nbody.dark-mode #main-page-chat-input::placeholder {\n  color: var(--text-dark);\n  opacity: 0.7;\n}\n\n#main-page-send-button {\n  padding: 12px 15px;\n  background-color: var(--accent-light);\n  color: white;\n  border: none;\n  border-radius: 50%; /* Botão circular */\n  cursor: pointer;\n  font-size: 1.1em; /* Tamanho do ícone */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.3s ease;\n  width: 46px; /* Largura fixa para manter círculo */\n  height: 46px; /* Altura fixa para manter círculo */\n}\n\nbody.dark-mode #main-page-send-button {\n  background-color: var(--accent-dark);\n  color: var(--bg-dark);\n}\n\n#main-page-send-button:hover {\n  opacity: 0.9;\n}\n\n/* --- Estilos do Chat Widget --- */\n.chat-bubble {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: var(--chat-bubble-bg-light);\n  color: var(--chat-bubble-text-light);\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  z-index: 1000;\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\nbody.dark-mode .chat-bubble {\n  background-color: var(--chat-bubble-bg-dark);\n  color: var(--chat-bubble-text-dark);\n}\n\n.chat-bubble i {\n  font-size: 24px;\n}\n\n.chat-widget {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--container-bg-light);\n  color: var(--text-light);\n  z-index: 1001;\n  flex-direction: column;\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\nbody.dark-mode .chat-widget {\n  background-color: var(--container-bg-dark);\n  color: var(--text-dark);\n}\n\n.chat-header {\n  background-color: var(--chat-header-bg-light);\n  color: var(--chat-header-text-light);\n  padding: 20px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-size: 18px;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  position: relative;\n}\n\nbody.dark-mode .chat-header {\n  background-color: var(--chat-header-bg-dark);\n  color: var(--chat-header-text-dark);\n}\n\n.chat-header button#close-chat {\n  background: none;\n  border: none;\n  color: var(--chat-header-text-light);\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n  padding: 5px;\n  transition: color 0.3s ease;\n  z-index: 1;\n}\n\nbody.dark-mode .chat-header button#close-chat {\n  color: var(--chat-header-text-dark);\n}\n\n.chat-header .chat-title {\n  font-weight: bold;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  max-width: calc(100% - 100px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.messages-container {\n  flex-grow: 1;\n  padding: 20px;\n  overflow-y: auto;\n  background-color: var(--chat-messages-bg-light);\n  transition: background-color 0.3s ease;\n}\n\nbody.dark-mode .messages-container {\n  background-color: var(--chat-messages-bg-dark);\n}\n\n.message {\n  margin-bottom: 12px;\n  padding: 8px 12px;\n  border-radius: 10px;\n  line-height: 1.4;\n  max-width: 75%;\n  width: -moz-fit-content;\n  width: fit-content;\n  overflow-wrap: break-word;\n}\n\n.user-message {\n  background-color: var(--accent-light);\n  color: white;\n  margin-left: auto;\n}\n\nbody.dark-mode .user-message {\n  background-color: var(--accent-dark);\n  color: var(--bg-dark);\n}\n\n.support-message {\n  background-color: #e9ecef;\n  color: var(--support-message-text-light);\n  margin-right: auto;\n}\n\nbody.dark-mode .support-message {\n  background-color: #3a3a3a;\n  color: var(--support-message-text-dark);\n}\n\n.chat-footer {\n  display: flex;\n  padding: 15px 20px;\n  border-top: 1px solid var(--chat-input-border-light);\n  background-color: var(--chat-footer-bg-light);\n  transition: background-color 0.3s ease, border-top-color 0.3s ease;\n}\n\nbody.dark-mode .chat-footer {\n  background-color: var(--chat-footer-bg-dark);\n  border-top-color: var(--chat-input-border-dark);\n}\n\n.chat-footer input {\n  flex: 1;\n  padding: 12px 15px;\n  border: 1px solid var(--chat-input-border-light);\n  border-radius: 20px;\n  background-color: var(--chat-input-bg-light);\n  color: var(--text-light);\n  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;\n}\n\nbody.dark-mode .chat-footer input {\n  background-color: var(--chat-input-bg-dark);\n  color: var(--text-dark);\n  border-color: var(--chat-input-border-dark);\n}\n\n.chat-footer button {\n  margin-left: 10px;\n  padding: 12px 20px;\n  background-color: var(--accent-light);\n  color: white;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: background-color 0.3s ease;\n}\n\nbody.dark-mode .chat-footer button {\n  background-color: var(--accent-dark);\n  color: var(--bg-dark);\n}\n\n.chat-footer button:hover {\n  opacity: 0.9;\n}\n\n@media (max-width: 768px) {\n  .content-container {\n    padding: 30px 35px;\n  }\n  .content-container h1 {\n    font-size: 2.4em;\n  }\n  .content-container p {\n    font-size: 1.1em;\n  }\n  .highlight {\n    font-size: 1.15em;\n  }\n  .chat-header .chat-title {\n    max-width: calc(100% - 80px);\n  }\n  .main-page-chat-input-container {\n    flex-direction: column;\n    gap: 10px;\n  }\n  #main-page-chat-input {\n    width: calc(100% - 36px); /* Considera padding */\n    margin-right: 0;\n  }\n  #main-page-send-button {\n    width: 100%;\n    border-radius: 25px; /* Retangular em telas menores */\n  }\n}\n@media (max-width: 480px) {\n  .appsmith-widget-container {\n    padding: 15px;\n  }\n  .dark-mode-toggle-container {\n    top: 15px;\n    right: 15px;\n  }\n  .dark-mode-toggle {\n    padding: 8px 12px;\n    font-size: 0.8em;\n  }\n  .icon {\n    font-size: 1em;\n  }\n  .content-container h1 {\n    font-size: 2em;\n  }\n  .content-container p {\n    font-size: 1em;\n  }\n  .highlight {\n    font-size: 1.05em;\n  }\n  .content-container {\n    padding: 25px 20px;\n  }\n  .chat-header {\n    padding: 15px;\n    font-size: 16px;\n  }\n  .chat-header button#close-chat {\n    font-size: 18px;\n  }\n  .chat-header .chat-title {\n    max-width: calc(100% - 70px);\n    font-size: inherit;\n  }\n  .messages-container {\n    padding: 15px;\n  }\n  .message {\n    padding: 6px 10px;\n  }\n  .chat-footer {\n    padding: 10px 15px;\n  }\n  .chat-footer input {\n    padding: 10px 12px;\n  }\n  .chat-footer button {\n    padding: 10px 15px;\n  }\n}",
    "html": "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>pokeIA</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<div class=\"appsmith-widget-container\">\n        <div class=\"content-container\">\n            <h1>Olá!</h1>\n            <p>Eu sou <span class=\"ai-name\">PokeIA</span>, sua assistente de Inteligência Artificial.</p>\n            <p>Estou aqui para simplificar tarefas e ajudar você a explorar o mundo de pokemon de uma forma nova e intuitiva.</p>\n            <p class=\"highlight\">Como posso ajudar na sua aventura hoje?</p>\n            <div class=\"main-page-chat-input-container\">\n                <input type=\"text\" id=\"main-page-chat-input\" placeholder=\"Pergunte algo diretamente...\">\n                <button id=\"main-page-send-button\" aria-label=\"Enviar pergunta para o chat\">\n                    <i class=\"fas fa-paper-plane\"></i>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"chat-bubble\" id=\"chat-bubble\">\n      <i class=\"fas fa-comments\"></i>\n    </div>\n\n    <div class=\"chat-widget\" id=\"chat-widget\">\n      <div class=\"chat-header\">\n        <button id=\"close-chat\" aria-label=\"Fechar chat\">X</button>\n        <span class=\"chat-title\">Pokemon Expert</span>\n      </div>\n      <div class=\"messages-container\" id=\"messages-container\">\n        </div>\n      <div class=\"chat-footer\">\n        <input type=\"text\" id=\"chat-input\" placeholder=\"Digite sua mensagem...\">\n        <button id=\"send-message\" aria-label=\"Enviar mensagem\">Enviar</button>\n      </div>\n    </div>\n",
    "js": "document.addEventListener('DOMContentLoaded', () => {\n  const body = document.body;\n\n  // --- Lógica do Botão de Modo Escuro (Existente) ---\n  const toggleContainer = document.createElement('div');\n  toggleContainer.classList.add('dark-mode-toggle-container');\n  const darkModeToggle = document.createElement('button');\n  darkModeToggle.classList.add('dark-mode-toggle');\n  darkModeToggle.setAttribute('aria-label', 'Alternar modo de cor');\n  darkModeToggle.setAttribute('title', 'Alternar modo de cor');\n  const toggleIcon = document.createElement('span');\n  toggleIcon.classList.add('icon');\n  const toggleText = document.createElement('span');\n  toggleText.classList.add('toggle-text');\n  darkModeToggle.appendChild(toggleIcon);\n  darkModeToggle.appendChild(toggleText);\n  toggleContainer.appendChild(darkModeToggle);\n  body.appendChild(toggleContainer);\n  const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  function setTheme(isDark) {\n    body.classList.toggle('dark-mode', isDark);\n    if (toggleText) toggleText.textContent = isDark ? 'Claro' : 'Escuro';\n    if (toggleIcon) toggleIcon.textContent = isDark ? '☀️' : '🌙';\n    try {\n      localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    } catch (e) {\n      console.error(\"Não foi possível acessar o localStorage:\", e);\n    }\n  }\n  let savedTheme = null;\n  try {\n    savedTheme = localStorage.getItem('theme');\n  } catch (e) {/* Silencioso */}\n  if (savedTheme) {\n    setTheme(savedTheme === 'dark');\n  } else {\n    setTheme(prefersDarkScheme.matches);\n  }\n  darkModeToggle.addEventListener('click', () => {\n    setTheme(!body.classList.contains('dark-mode'));\n  });\n  prefersDarkScheme.addEventListener('change', e => {\n    let currentSavedTheme = null;\n    try {\n      currentSavedTheme = localStorage.getItem('theme');\n    } catch (error) {/* Silencioso */}\n    if (!currentSavedTheme) {\n      setTheme(e.matches);\n    }\n  });\n  // --- Fim da Lógica do Modo Escuro ---\n\n  // --- Lógica do Chat Widget (Existente e Nova) ---\n  const chatBubble = document.getElementById(\"chat-bubble\");\n  const chatWidget = document.getElementById(\"chat-widget\");\n  const closeChatButton = document.getElementById(\"close-chat\");\n  const messagesContainer = document.getElementById(\"messages-container\");\n  const chatInput = document.getElementById(\"chat-input\"); // Input dentro do chat widget\n  const sendMessageButton = document.getElementById(\"send-message\"); // Botão dentro do chat widget\n\n  // Novos elementos para o input na página principal\n  const mainPageChatInput = document.getElementById(\"main-page-chat-input\");\n  const mainPageSendButton = document.getElementById(\"main-page-send-button\");\n  if (chatBubble && chatWidget && closeChatButton) {\n    chatBubble.addEventListener(\"click\", () => {\n      openChatWidget();\n    });\n    closeChatButton.addEventListener(\"click\", () => {\n      closeChatWidget();\n    });\n  } else {\n    console.error(\"Elementos do chat (bubble, widget, ou botão de fechar) não encontrados.\");\n  }\n  if (sendMessageButton && chatInput && messagesContainer) {\n    // Para o chat interno\n    sendMessageButton.addEventListener(\"click\", sendChatMessage);\n    chatInput.addEventListener(\"keypress\", e => {\n      if (e.key === \"Enter\") {\n        sendChatMessage();\n        e.preventDefault();\n      }\n    });\n  } else {\n    console.error(\"Elementos de envio de mensagem do chat (botão, input ou container) não encontrados.\");\n  }\n\n  // Lógica para o novo input na página principal\n  if (mainPageChatInput && mainPageSendButton) {\n    mainPageSendButton.addEventListener(\"click\", sendMessageFromMainPage);\n    mainPageChatInput.addEventListener(\"keypress\", e => {\n      if (e.key === \"Enter\") {\n        sendMessageFromMainPage();\n        e.preventDefault();\n      }\n    });\n  } else {\n    console.error(\"Elementos do input de chat da página principal não encontrados.\");\n  }\n  function openChatWidget() {\n    if (chatWidget) chatWidget.style.display = \"flex\";\n    if (chatBubble) chatBubble.style.display = \"none\";\n  }\n  function closeChatWidget() {\n    if (chatWidget) chatWidget.style.display = \"none\";\n    if (chatBubble) chatBubble.style.display = \"flex\";\n  }\n  function sendChatMessage() {\n    // Envia mensagem do input DENTRO do chat\n    const userMessage = chatInput.value.trim();\n    if (!userMessage) return;\n    processAndSendMessage(userMessage);\n    chatInput.value = \"\";\n  }\n  function sendMessageFromMainPage() {\n    // Envia mensagem do NOVO input na página principal\n    const userMessage = mainPageChatInput.value.trim();\n    if (!userMessage) return;\n    processAndSendMessage(userMessage);\n    mainPageChatInput.value = \"\";\n    openChatWidget(); // Abre o chat após enviar a mensagem\n    // Opcional: focar no input do chat após abrir\n    // if (chatInput) chatInput.focus(); \n  }\n  function processAndSendMessage(message) {\n    addMessageToUI(message, true); // Adiciona à UI do chat\n    // Envia para o backend do Appsmith\n    if (typeof appsmith !== 'undefined' && typeof appsmith.triggerEvent === 'function') {\n      appsmith.triggerEvent('enviar', {\n        msg: message\n      });\n    } else {\n      console.warn(\"Appsmith SDK não está disponível ou triggerEvent não é uma função. Mensagem não enviada para o backend.\");\n      // Fallback para teste local\n      setTimeout(() => {\n        addMessageToUI(\"Sou um bot de teste. Appsmith não detectado. Sua mensagem: \" + message, false);\n      }, 1000);\n    }\n  }\n  function addMessageToUI(message, isUser) {\n    if (!messagesContainer) return;\n    const messageElement = document.createElement(\"div\");\n    messageElement.className = \"message \" + (isUser ? \"user-message\" : \"support-message\");\n    messageElement.textContent = message;\n    messagesContainer.appendChild(messageElement);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n  function updateMessagesFromAppsmith() {\n    if (typeof appsmith === 'undefined' || typeof appsmith.model === 'undefined') {\n      return;\n    }\n    let chatHistory = appsmith.model.chatHistory || [];\n    if (!chatHistory.length) return;\n    const lastMessageInHistory = chatHistory[chatHistory.length - 1];\n    const lastMessageInUI = messagesContainer.lastElementChild;\n    if (lastMessageInHistory && lastMessageInHistory.role === \"CHATBOT\") {\n      if (!lastMessageInUI || !lastMessageInUI.classList.contains(\"support-message\") || lastMessageInUI.textContent !== lastMessageInHistory.message) {\n        addMessageToUI(lastMessageInHistory.message, false);\n      }\n    }\n  }\n  if (typeof appsmith !== 'undefined' && typeof appsmith.onReady === 'function') {\n    appsmith.onReady(() => {\n      if (typeof appsmith.onModelChange === 'function') {\n        if (messagesContainer) messagesContainer.innerHTML = '';\n        updateMessagesFromAppsmith();\n        appsmith.onModelChange(updateMessagesFromAppsmith);\n      } else {\n        console.warn(\"appsmith.onModelChange não é uma função.\");\n      }\n    });\n  } else {\n    console.warn(\"Appsmith SDK não está disponível. Funcionalidades do chat ligadas ao Appsmith podem não funcionar.\");\n  }\n  // --- Fim da Lógica do Chat Widget ---\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 0,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": "        :root {\n            --bg-light: #f8f9fa;\n            --text-light: #212529;\n            --accent-light: #007bff;\n            --container-bg-light: #ffffff;\n            --chat-header-bg-light: #007bff;\n            --chat-header-text-light: white;\n            --chat-footer-bg-light: #f9f9f9;\n            --chat-messages-bg-light: #f9f9f9;\n            --chat-input-bg-light: white;\n            --chat-input-border-light: #ccc;\n            --chat-bubble-bg-light: #007bff;\n            --chat-bubble-text-light: white;\n            --user-message-text-light: #007bff; /* Cor do texto da mensagem do usuário não é usada, pois o fundo é colorido */\n            --support-message-text-light: #555;\n\n\n            --bg-dark: #1a1a1a;\n            --text-dark: #e9ecef;\n            --accent-dark: #61dafb;\n            --container-bg-dark: #2c2c2c;\n            --chat-header-bg-dark: #0056b3;\n            --chat-header-text-dark: #e9ecef;\n            --chat-footer-bg-dark: #222;\n            --chat-messages-bg-dark: #272727;\n            --chat-input-bg-dark: #333;\n            --chat-input-border-dark: #555;\n            --chat-bubble-bg-dark: var(--accent-dark);\n            --chat-bubble-text-dark: var(--bg-dark);\n            --user-message-text-dark: var(--accent-dark); /* Cor do texto da mensagem do usuário não é usada, pois o fundo é colorido */\n            --support-message-text-dark: #bbb;\n            \n            --font-primary: 'Inter', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n        }\n\n        body {\n            font-family: var(--font-primary);\n            margin: 0;\n            background-color: var(--bg-light);\n            color: var(--text-light);\n            transition: background-color 0.4s ease, color 0.4s ease;\n            overflow-x: hidden;\n        }\n\n        body.dark-mode {\n            background-color: var(--bg-dark);\n            color: var(--text-dark);\n        }\n\n        .appsmith-widget-container {\n            padding: 20px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            min-height: 80vh;\n            text-align: center;\n        }\n\n        .dark-mode-toggle-container {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1002;\n        }\n\n        .dark-mode-toggle {\n            background-color: var(--container-bg-light);\n            color: var(--text-light);\n            border: 1px solid var(--text-light);\n            padding: 10px 15px;\n            border-radius: 25px;\n            cursor: pointer;\n            font-size: 0.9em;\n            font-weight: 500;\n            outline: none;\n            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, transform 0.2s ease;\n            display: flex;\n            align-items: center;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n        }\n        .dark-mode-toggle:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n        }\n        body.dark-mode .dark-mode-toggle {\n            background-color: var(--container-bg-dark);\n            color: var(--text-dark);\n            border: 1px solid var(--text-dark);\n        }\n        body.dark-mode .dark-mode-toggle:hover {\n            background-color: var(--accent-dark);\n            color: var(--bg-dark);\n            border-color: var(--accent-dark);\n        }\n        .icon { /* Para o ícone do botão de tema */\n            margin-right: 8px;\n            font-size: 1.1em;\n        }\n\n        .content-container {\n            background-color: var(--container-bg-light);\n            color: var(--text-light);\n            padding: 40px 50px;\n            border-radius: 15px;\n            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);\n            max-width: 550px;\n            width: 90%;\n            transition: background-color 0.4s ease, color 0.4s ease, box-shadow 0.4s ease;\n        }\n        body.dark-mode .content-container {\n            background-color: var(--container-bg-dark);\n            color: var(--text-dark);\n            box-shadow: 0 8px 25px rgba(255, 255, 255, 0.05);\n        }\n\n        .content-container h1 {\n            color: var(--accent-light);\n            margin-top: 0;\n            margin-bottom: 25px;\n            font-size: 2.8em;\n            font-weight: 700;\n            letter-spacing: -0.5px;\n            transition: color 0.4s ease;\n        }\n        body.dark-mode .content-container h1 {\n            color: var(--accent-dark);\n        }\n        .content-container p {\n            font-size: 1.15em;\n            line-height: 1.7;\n            margin-bottom: 20px;\n            font-weight: 400;\n        }\n        .ai-name {\n            font-weight: 600;\n            color: var(--accent-light);\n            transition: color 0.4s ease;\n        }\n        body.dark-mode .ai-name {\n            color: var(--accent-dark);\n        }\n        .highlight {\n            font-size: 1.25em;\n            font-weight: 500;\n            margin-top: 30px;\n            margin-bottom: 25px; /* Espaço antes do novo input */\n            color: var(--accent-light);\n            transition: color 0.4s ease;\n        }\n        body.dark-mode .highlight {\n            color: var(--accent-dark);\n        }\n\n        /* Novo container para input na página principal */\n        .main-page-chat-input-container {\n            display: flex;\n            align-items: center;\n            width: 100%;\n            margin-top: 10px; /* Espaçamento adicional */\n            margin-bottom: 20px; /* Espaçamento abaixo */\n        }\n        #main-page-chat-input {\n            flex-grow: 1;\n            padding: 12px 18px;\n            border: 1px solid var(--chat-input-border-light);\n            border-radius: 25px; /* Bordas arredondadas */\n            font-size: 1em;\n            background-color: var(--chat-input-bg-light);\n            color: var(--text-light);\n            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;\n            margin-right: 10px;\n        }\n        body.dark-mode #main-page-chat-input {\n            background-color: var(--chat-input-bg-dark);\n            color: var(--text-dark);\n            border-color: var(--chat-input-border-dark);\n        }\n        #main-page-chat-input::placeholder {\n            color: var(--text-light);\n            opacity: 0.7;\n        }\n        body.dark-mode #main-page-chat-input::placeholder {\n            color: var(--text-dark);\n            opacity: 0.7;\n        }\n        #main-page-send-button {\n            padding: 12px 15px;\n            background-color: var(--accent-light);\n            color: white;\n            border: none;\n            border-radius: 50%; /* Botão circular */\n            cursor: pointer;\n            font-size: 1.1em; /* Tamanho do ícone */\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: background-color 0.3s ease;\n            width: 46px; /* Largura fixa para manter círculo */\n            height: 46px; /* Altura fixa para manter círculo */\n        }\n        body.dark-mode #main-page-send-button {\n            background-color: var(--accent-dark);\n            color: var(--bg-dark);\n        }\n        #main-page-send-button:hover {\n            opacity: 0.9;\n        }\n\n\n        /* --- Estilos do Chat Widget --- */\n        .chat-bubble {\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            background-color: var(--chat-bubble-bg-light);\n            color: var(--chat-bubble-text-light);\n            width: 60px;\n            height: 60px;\n            border-radius: 50%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            cursor: pointer;\n            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n            z-index: 1000;\n            transition: background-color 0.3s ease, color 0.3s ease;\n        }\n        body.dark-mode .chat-bubble {\n            background-color: var(--chat-bubble-bg-dark);\n            color: var(--chat-bubble-text-dark);\n        }\n        .chat-bubble i {\n            font-size: 24px;\n        }\n\n        .chat-widget {\n            display: none;\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: var(--container-bg-light);\n            color: var(--text-light);\n            z-index: 1001;\n            flex-direction: column;\n            transition: background-color 0.3s ease, color 0.3s ease;\n        }\n        body.dark-mode .chat-widget {\n            background-color: var(--container-bg-dark);\n            color: var(--text-dark);\n        }\n\n        .chat-header {\n            background-color: var(--chat-header-bg-light);\n            color: var(--chat-header-text-light);\n            padding: 20px;\n            display: flex;\n            justify-content: flex-start; \n            align-items: center;\n            font-size: 18px;\n            transition: background-color 0.3s ease, color 0.3s ease;\n            position: relative; \n        }\n        body.dark-mode .chat-header {\n            background-color: var(--chat-header-bg-dark);\n            color: var(--chat-header-text-dark);\n        }\n\n        .chat-header button#close-chat { \n            background: none;\n            border: none;\n            color: var(--chat-header-text-light);\n            font-size: 20px; \n            font-weight: bold;\n            cursor: pointer;\n            padding: 5px; \n            transition: color 0.3s ease;\n            z-index: 1; \n        }\n        body.dark-mode .chat-header button#close-chat {\n            color: var(--chat-header-text-dark);\n        }\n\n        .chat-header .chat-title { \n            font-weight: bold; \n            position: absolute;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n            max-width: calc(100% - 100px); \n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n\n        .messages-container {\n            flex-grow: 1;\n            padding: 20px;\n            overflow-y: auto;\n            background-color: var(--chat-messages-bg-light);\n            transition: background-color 0.3s ease;\n        }\n        body.dark-mode .messages-container {\n            background-color: var(--chat-messages-bg-dark);\n        }\n\n        .message {\n            margin-bottom: 12px;\n            padding: 8px 12px;\n            border-radius: 10px;\n            line-height: 1.4;\n            max-width: 75%; \n            width: -moz-fit-content; \n            width: fit-content;    \n            overflow-wrap: break-word; \n        }\n\n        .user-message {\n            background-color: var(--accent-light);\n            color: white;\n            margin-left: auto; \n        }\n        body.dark-mode .user-message {\n            background-color: var(--accent-dark);\n            color: var(--bg-dark);\n        }\n\n        .support-message {\n            background-color: #e9ecef;\n            color: var(--support-message-text-light);\n            margin-right: auto; \n        }\n        body.dark-mode .support-message {\n            background-color: #3a3a3a;\n            color: var(--support-message-text-dark);\n        }\n\n        .chat-footer {\n            display: flex;\n            padding: 15px 20px;\n            border-top: 1px solid var(--chat-input-border-light);\n            background-color: var(--chat-footer-bg-light);\n            transition: background-color 0.3s ease, border-top-color 0.3s ease;\n        }\n        body.dark-mode .chat-footer {\n            background-color: var(--chat-footer-bg-dark);\n            border-top-color: var(--chat-input-border-dark);\n        }\n        .chat-footer input {\n            flex: 1;\n            padding: 12px 15px;\n            border: 1px solid var(--chat-input-border-light);\n            border-radius: 20px;\n            background-color: var(--chat-input-bg-light);\n            color: var(--text-light);\n            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;\n        }\n        body.dark-mode .chat-footer input {\n            background-color: var(--chat-input-bg-dark);\n            color: var(--text-dark);\n            border-color: var(--chat-input-border-dark);\n        }\n        .chat-footer button {\n            margin-left: 10px;\n            padding: 12px 20px;\n            background-color: var(--accent-light);\n            color: white;\n            border: none;\n            border-radius: 20px;\n            cursor: pointer;\n            font-weight: 500;\n            transition: background-color 0.3s ease;\n        }\n        body.dark-mode .chat-footer button {\n            background-color: var(--accent-dark);\n            color: var(--bg-dark);\n        }\n        .chat-footer button:hover {\n            opacity: 0.9;\n        }\n\n        @media (max-width: 768px) {\n            .content-container { padding: 30px 35px; }\n            .content-container h1 { font-size: 2.4em; }\n            .content-container p { font-size: 1.1em; }\n            .highlight { font-size: 1.15em; }\n            .chat-header .chat-title {\n                 max-width: calc(100% - 80px); \n            }\n            .main-page-chat-input-container {\n                flex-direction: column;\n                gap: 10px;\n            }\n            #main-page-chat-input {\n                width: calc(100% - 36px); /* Considera padding */\n                margin-right: 0;\n            }\n            #main-page-send-button {\n                width: 100%;\n                border-radius: 25px; /* Retangular em telas menores */\n            }\n        }\n\n        @media (max-width: 480px) {\n            .appsmith-widget-container { padding: 15px; }\n            .dark-mode-toggle-container { top: 15px; right: 15px; }\n            .dark-mode-toggle { padding: 8px 12px; font-size: 0.8em; }\n            .icon { font-size: 1em; }\n\n            .content-container h1 { font-size: 2em; }\n            .content-container p { font-size: 1em; }\n            .highlight { font-size: 1.05em; }\n            .content-container { padding: 25px 20px; }\n\n            .chat-header { padding: 15px; font-size: 16px; }\n            .chat-header button#close-chat { font-size: 18px; }\n            .chat-header .chat-title {\n                 max-width: calc(100% - 70px); \n                 font-size: inherit; \n            }\n            .messages-container { padding: 15px; }\n            .message { padding: 6px 10px; }\n            .chat-footer { padding: 10px 15px; }\n            .chat-footer input { padding: 10px 12px; }\n            .chat-footer button { padding: 10px 15px; }\n        }",
    "html": "<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>pokeIA</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<div class=\"appsmith-widget-container\">\n        <div class=\"content-container\">\n            <h1>Olá!</h1>\n            <p>Eu sou <span class=\"ai-name\">PokeIA</span>, sua assistente de Inteligência Artificial.</p>\n            <p>Estou aqui para simplificar tarefas e ajudar você a explorar o mundo de pokemon de uma forma nova e intuitiva.</p>\n            <p class=\"highlight\">Como posso ajudar na sua aventura hoje?</p>\n            <div class=\"main-page-chat-input-container\">\n                <input type=\"text\" id=\"main-page-chat-input\" placeholder=\"Pergunte algo diretamente...\">\n                <button id=\"main-page-send-button\" aria-label=\"Enviar pergunta para o chat\">\n                    <i class=\"fas fa-paper-plane\"></i>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"chat-bubble\" id=\"chat-bubble\">\n      <i class=\"fas fa-comments\"></i>\n    </div>\n\n    <div class=\"chat-widget\" id=\"chat-widget\">\n      <div class=\"chat-header\">\n        <button id=\"close-chat\" aria-label=\"Fechar chat\">X</button>\n        <span class=\"chat-title\">Pokemon Expert</span>\n      </div>\n      <div class=\"messages-container\" id=\"messages-container\">\n        </div>\n      <div class=\"chat-footer\">\n        <input type=\"text\" id=\"chat-input\" placeholder=\"Digite sua mensagem...\">\n        <button id=\"send-message\" aria-label=\"Enviar mensagem\">Enviar</button>\n      </div>\n    </div>\n",
    "js": "document.addEventListener('DOMContentLoaded', () => {\n            const body = document.body;\n\n            // --- Lógica do Botão de Modo Escuro (Existente) ---\n            const toggleContainer = document.createElement('div');\n            toggleContainer.classList.add('dark-mode-toggle-container');\n            const darkModeToggle = document.createElement('button');\n            darkModeToggle.classList.add('dark-mode-toggle');\n            darkModeToggle.setAttribute('aria-label', 'Alternar modo de cor');\n            darkModeToggle.setAttribute('title', 'Alternar modo de cor');\n            const toggleIcon = document.createElement('span');\n            toggleIcon.classList.add('icon');\n            const toggleText = document.createElement('span');\n            toggleText.classList.add('toggle-text');\n            darkModeToggle.appendChild(toggleIcon);\n            darkModeToggle.appendChild(toggleText);\n            toggleContainer.appendChild(darkModeToggle);\n            body.appendChild(toggleContainer);\n\n            const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n            function setTheme(isDark) {\n                body.classList.toggle('dark-mode', isDark);\n                if (toggleText) toggleText.textContent = isDark ? 'Claro' : 'Escuro';\n                if (toggleIcon) toggleIcon.textContent = isDark ? '☀️' : '🌙';\n                try {\n                    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n                } catch (e) {\n                    console.error(\"Não foi possível acessar o localStorage:\", e);\n                }\n            }\n\n            let savedTheme = null;\n            try { savedTheme = localStorage.getItem('theme'); } catch (e) { /* Silencioso */ }\n            if (savedTheme) {\n                setTheme(savedTheme === 'dark');\n            } else {\n                setTheme(prefersDarkScheme.matches);\n            }\n\n            darkModeToggle.addEventListener('click', () => {\n                setTheme(!body.classList.contains('dark-mode'));\n            });\n\n            prefersDarkScheme.addEventListener('change', (e) => {\n                let currentSavedTheme = null;\n                try { currentSavedTheme = localStorage.getItem('theme'); } catch (error) { /* Silencioso */ }\n                if (!currentSavedTheme) {\n                    setTheme(e.matches);\n                }\n            });\n            // --- Fim da Lógica do Modo Escuro ---\n\n\n            // --- Lógica do Chat Widget (Existente e Nova) ---\n            const chatBubble = document.getElementById(\"chat-bubble\");\n            const chatWidget = document.getElementById(\"chat-widget\");\n            const closeChatButton = document.getElementById(\"close-chat\"); \n            const messagesContainer = document.getElementById(\"messages-container\");\n            const chatInput = document.getElementById(\"chat-input\"); // Input dentro do chat widget\n            const sendMessageButton = document.getElementById(\"send-message\"); // Botão dentro do chat widget\n\n            // Novos elementos para o input na página principal\n            const mainPageChatInput = document.getElementById(\"main-page-chat-input\");\n            const mainPageSendButton = document.getElementById(\"main-page-send-button\");\n\n            if (chatBubble && chatWidget && closeChatButton) {\n                chatBubble.addEventListener(\"click\", () => {\n                    openChatWidget();\n                });\n\n                closeChatButton.addEventListener(\"click\", () => {\n                    closeChatWidget();\n                });\n            } else {\n                console.error(\"Elementos do chat (bubble, widget, ou botão de fechar) não encontrados.\");\n            }\n            \n            if (sendMessageButton && chatInput && messagesContainer) { // Para o chat interno\n                sendMessageButton.addEventListener(\"click\", sendChatMessage);\n                chatInput.addEventListener(\"keypress\", (e) => {\n                    if (e.key === \"Enter\") {\n                        sendChatMessage();\n                        e.preventDefault(); \n                    }\n                });\n            } else {\n                console.error(\"Elementos de envio de mensagem do chat (botão, input ou container) não encontrados.\");\n            }\n\n            // Lógica para o novo input na página principal\n            if (mainPageChatInput && mainPageSendButton) {\n                mainPageSendButton.addEventListener(\"click\", sendMessageFromMainPage);\n                mainPageChatInput.addEventListener(\"keypress\", (e) => {\n                    if (e.key === \"Enter\") {\n                        sendMessageFromMainPage();\n                        e.preventDefault();\n                    }\n                });\n            } else {\n                console.error(\"Elementos do input de chat da página principal não encontrados.\");\n            }\n\n            function openChatWidget() {\n                if (chatWidget) chatWidget.style.display = \"flex\";\n                if (chatBubble) chatBubble.style.display = \"none\";\n            }\n\n            function closeChatWidget() {\n                if (chatWidget) chatWidget.style.display = \"none\";\n                if (chatBubble) chatBubble.style.display = \"flex\";\n            }\n\n            function sendChatMessage() { // Envia mensagem do input DENTRO do chat\n                const userMessage = chatInput.value.trim();\n                if (!userMessage) return;\n                processAndSendMessage(userMessage);\n                chatInput.value = \"\";\n            }\n\n            function sendMessageFromMainPage() { // Envia mensagem do NOVO input na página principal\n                const userMessage = mainPageChatInput.value.trim();\n                if (!userMessage) return;\n                processAndSendMessage(userMessage);\n                mainPageChatInput.value = \"\";\n                openChatWidget(); // Abre o chat após enviar a mensagem\n                // Opcional: focar no input do chat após abrir\n                // if (chatInput) chatInput.focus(); \n            }\n\n            function processAndSendMessage(message) {\n                addMessageToUI(message, true); // Adiciona à UI do chat\n                // Envia para o backend do Appsmith\n                if (typeof appsmith !== 'undefined' && typeof appsmith.triggerEvent === 'function') {\n                    appsmith.triggerEvent('enviar', { msg: message });\n                } else {\n                    console.warn(\"Appsmith SDK não está disponível ou triggerEvent não é uma função. Mensagem não enviada para o backend.\");\n                    // Fallback para teste local\n                    setTimeout(() => {\n                        addMessageToUI(\"Sou um bot de teste. Appsmith não detectado. Sua mensagem: \" + message, false);\n                    }, 1000);\n                }\n            }\n\n            function addMessageToUI(message, isUser) {\n                if (!messagesContainer) return;\n                const messageElement = document.createElement(\"div\");\n                messageElement.className = \"message \" + (isUser ? \"user-message\" : \"support-message\");\n                messageElement.textContent = message;\n                messagesContainer.appendChild(messageElement);\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n            }\n\n            function updateMessagesFromAppsmith() {\n                if (typeof appsmith === 'undefined' || typeof appsmith.model === 'undefined') {\n                    return;\n                }\n                let chatHistory = appsmith.model.chatHistory || [];\n                if (!chatHistory.length) return;\n                \n                const lastMessageInHistory = chatHistory[chatHistory.length - 1];\n                const lastMessageInUI = messagesContainer.lastElementChild;\n                \n                if (lastMessageInHistory && lastMessageInHistory.role === \"CHATBOT\") {\n                    if (!lastMessageInUI || !lastMessageInUI.classList.contains(\"support-message\") || lastMessageInUI.textContent !== lastMessageInHistory.message) {\n                         addMessageToUI(lastMessageInHistory.message, false);\n                    }\n                }\n            }\n\n            if (typeof appsmith !== 'undefined' && typeof appsmith.onReady === 'function') {\n                appsmith.onReady(() => {\n                    if (typeof appsmith.onModelChange === 'function') {\n                        if(messagesContainer) messagesContainer.innerHTML = '';\n                        updateMessagesFromAppsmith(); \n                        appsmith.onModelChange(updateMessagesFromAppsmith);\n                    } else {\n                        console.warn(\"appsmith.onModelChange não é uma função.\");\n                    }\n                });\n            } else {\n                console.warn(\"Appsmith SDK não está disponível. Funcionalidades do chat ligadas ao Appsmith podem não funcionar.\");\n            }\n            // --- Fim da Lógica do Chat Widget ---\n        });"
  },
  "version": 1,
  "widgetId": "bps5eb2nx6",
  "widgetName": "Custom1"
}